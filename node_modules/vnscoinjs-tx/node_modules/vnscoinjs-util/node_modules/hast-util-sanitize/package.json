{
  "_args": [
    [
      {
        "raw": "hast-util-sanitize@^1.0.0",
        "scope": null,
        "escapedName": "hast-util-sanitize",
        "name": "hast-util-sanitize",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/home/ubuntu/test/demo/node_modules/vnscoinjs-tx/node_modules/vnscoinjs-util/node_modules/remark-html"
    ]
  ],
  "_from": "hast-util-sanitize@>=1.0.0 <2.0.0",
  "_id": "hast-util-sanitize@1.2.0",
  "_inCache": true,
  "_location": "/hast-util-sanitize",
  "_nodeVersion": "10.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/hast-util-sanitize_1.2.0_1528708421750_0.3080662289908731"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "hast-util-sanitize@^1.0.0",
    "scope": null,
    "escapedName": "hast-util-sanitize",
    "name": "hast-util-sanitize",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/remark-html"
  ],
  "_resolved": "https://registry.npmjs.org/hast-util-sanitize/-/hast-util-sanitize-1.2.0.tgz",
  "_shasum": "1a46bc8e8554f4747d219dd1d85f9cb245b1b08d",
  "_shrinkwrap": null,
  "_spec": "hast-util-sanitize@^1.0.0",
  "_where": "/home/ubuntu/test/demo/node_modules/vnscoinjs-tx/node_modules/vnscoinjs-util/node_modules/remark-html",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/syntax-tree/hast-util-sanitize/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    },
    {
      "name": "Jason Switzer",
      "email": "jswitzer@gmail.com"
    }
  ],
  "dependencies": {
    "xtend": "^4.0.1"
  },
  "description": "Sanitize HAST nodes",
  "devDependencies": {
    "browserify": "^16.0.0",
    "deepmerge": "^2.0.0",
    "esmangle": "^1.0.1",
    "hast-util-to-html": "^3.0.0",
    "hastscript": "^3.0.0",
    "nyc": "^12.0.0",
    "prettier": "^1.13.5",
    "remark-cli": "^5.0.0",
    "remark-preset-wooorm": "^4.0.0",
    "tape": "^4.0.0",
    "unist-builder": "^1.0.1",
    "xo": "^0.21.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-VwCTqjt6fbMGacxGB1FKV5sBJaVVkyCGVMDwb4nnqvCW2lkqscA2GEpOyBx4ZWRXty1eAZF58MHBrllEoQEoBg==",
    "shasum": "1a46bc8e8554f4747d219dd1d85f9cb245b1b08d",
    "tarball": "https://registry.npmjs.org/hast-util-sanitize/-/hast-util-sanitize-1.2.0.tgz",
    "fileCount": 6,
    "unpackedSize": 17276,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbHj1GCRA9TVsSAnZWagAAgKYP/0bG8QrBTVxG2Ka6hUtC\nSXDLUb29ikCaQqtZGwnjE6MpVv8sFJC6jkLJYw/eF50m5G2sH+XR2QvCFpIL\nueBEw8BD8kKsRbJgQ6Q3oqMObs38iZH8bxHk8DDE7aNo8sWitWS/XRnXWaqY\nOjSjozG9Fl53f0xjLwYOyKlbD2yi/SKQ27Qme3FpwiZgXqFeNwSj6D2jwUwr\nUcr2+eShZ43+lz5dibHhRb+H15nXcZ8+zh1HyG1OldWGfaFeZEX9fvCMmgRS\n2ncfCcjclDbDO5rDw6h1fGxg+fJz/ivQBPooiVmEmg1DggaYfkkDdBIkuNJ6\np6NFo0mG9lIDlXnWQHb/slu/aBPQVe6oemRiIf5qszmwjqoymeQrxpROmw5W\nZw8WMWdF16LWiCOUruJPf8Q1M4dRrXxli52hBPrFBmTukcnaPUW8ykI2snU2\nDbEsSO3cCnISMV/aCpU1VTPgweoqHglqk96Cfuz5EloFshElWtbGs8Dt2uUw\nDbQ002UCZd5BO7Evjk69gIbr8ZM3fHRIpmfUN5/OsR4d3nA3vnUcwZwMWohx\nWF0DepRKHCBTWVxWCIoJugbGQFyzMObdL3ea/+hjgL5VhJr4O9oTvHCGLy61\n7PxHfkpa6DqbgLvRZx7GZKPnE5MtK+Zu2CIgiupWDtULwcjzR1OIGfGQy/LL\nBSrJ\r\n=15Vb\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "lib",
    "index.js"
  ],
  "gitHead": "b984ba9942a19f1d39c1b2f03f41af88c67dcf8f",
  "homepage": "https://github.com/syntax-tree/hast-util-sanitize#readme",
  "keywords": [
    "hast",
    "util",
    "sanitize"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "hast-util-sanitize",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "prettier": {
    "tabWidth": 2,
    "useTabs": false,
    "singleQuote": true,
    "bracketSpacing": false,
    "semi": false,
    "trailingComma": "none"
  },
  "readme": "# hast-util-sanitize [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nSanitize [HAST][].\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install hast-util-sanitize\n```\n\n## Usage\n\n```javascript\nvar h = require('hastscript')\nvar u = require('unist-builder')\nvar sanitize = require('hast-util-sanitize')\nvar toHTML = require('hast-util-to-html')\n\nvar tree = h('div', {onmouseover: 'alert(\"alpha\")'}, [\n  h(\n    'a',\n    {href: 'jAva script:alert(\"bravo\")', onclick: 'alert(\"charlie\")'},\n    'delta'\n  ),\n  u('text', '\\n'),\n  h('script', 'alert(\"charlie\")'),\n  u('text', '\\n'),\n  h('img', {src: 'x', onerror: 'alert(\"delta\")'}),\n  u('text', '\\n'),\n  h('iframe', {src: 'javascript:alert(\"echo\")'}),\n  u('text', '\\n'),\n  h('math', h('mi', {'xlink:href': 'data:x,<script>alert(\"foxtrot\")</script>'}))\n])\n\nvar unsanitized = toHTML(tree)\nvar sanitized = toHTML(sanitize(tree))\n\nconsole.log(unsanitized)\nconsole.log(sanitized)\n```\n\nUnsanitized:\n\n```html\n<div onmouseover=\"alert(&#x22;alpha&#x22;)\"><a href=\"jAva script:alert(&#x22;bravo&#x22;)\" onclick=\"alert(&#x22;charlie&#x22;)\">delta</a>\n<script>alert(\"charlie\")</script>\n<img src=\"x\" onerror=\"alert(&#x22;delta&#x22;)\">\n<iframe src=\"javascript:alert(&#x22;echo&#x22;)\"></iframe>\n<math><mi xlink:href=\"data:x,&#x3C;script&#x3E;alert(&#x22;foxtrot&#x22;)&#x3C;/script&#x3E;\"></mi></math></div>\n```\n\nSanitized:\n\n```html\n<div><a>delta</a>\n\n<img src=\"x\">\n\n</div>\n```\n\n## API\n\n### `sanitize(node[, schema])`\n\nSanitize the given [HAST][] tree.\n\n###### Parameters\n\n*   `node` ([`HASTNode`][hast]).\n*   `schema` ([`Schema`][schema], optional).\n\n###### Returns\n\n[`HASTNode`][hast] — A new node.\n\n### `Schema`\n\nConfiguration.  If not given, defaults to [GitHub][] style sanitation.\nIf any top-level key isn’t given, it defaults to GH’s style too.\n\nFor a thorough sample, see the packages [`github.json`][schema-github].\n\nTo extend the standard schema with a few changes, clone `github.json`\nlike so:\n\n```js\nvar h = require('hastscript')\nvar merge = require('deepmerge')\nvar gh = require('hast-util-sanitize/lib/github')\nvar sanitize = require('hast-util-sanitize')\n\nvar schema = merge(gh, {attributes: {'*': ['className']}})\n\nvar tree = sanitize(h('div', {className: ['foo']}), schema)\n\n// `tree` still has `className`.\nconsole.log(tree)\n```\n\n###### `attributes`\n\nMap of tag-names to allowed attributes (`Object.<Array.<string>>`).\n\nThe special `'*'` key sets attributes allowed on all elements.\n\nOne special value, namely `'data*'`, can be used to allow all `data`\nproperties.\n\n```js\n\"attributes\": {\n  \"a\": [\n    \"href\"\n  ],\n  \"img\": [\n    \"src\",\n    \"longDesc\"\n  ],\n  // ...\n  \"*\": [\n    \"abbr\",\n    \"accept\",\n    \"acceptCharset\",\n    // ...\n    \"vspace\",\n    \"width\",\n    \"itemProp\"\n  ]\n}\n```\n\n###### `tagNames`\n\nList of allowed tag-names (`Array.<string>`).\n\n```js\n\"tagNames\": [\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  // ...\n  \"strike\",\n  \"summary\",\n  \"details\"\n]\n```\n\n###### `protocols`\n\nMap of protocols to support for attributes (`Object.<Array.<string>>`).\n\n```js\n\"protocols\": {\n  \"href\": [\n    \"http\",\n    \"https\",\n    \"mailto\"\n  ],\n  // ...\n  \"longDesc\": [\n    \"http\",\n    \"https\"\n  ]\n}\n```\n\n###### `ancestors`\n\nMap of tag-names to their required ancestral elements\n(`Object.<Array.<string>>`).\n\n```js\n\"ancestors\": {\n  \"li\": [\n    \"ol\",\n    \"ul\"\n  ],\n  // ...\n  \"tr\": [\n    \"table\"\n  ]\n}\n```\n\n###### `clobber`\n\nList of allowed attribute-names which can clobber (`Array.<string>`).\n\n```js\n\"clobber\": [\n  \"name\",\n  \"id\"\n]\n```\n\n###### `clobberPrefix`\n\nPrefix (`string`) to use before potentially clobbering properties.\n\n```js\n\"clobberPrefix\": \"user-content\"\n```\n\n###### `strip`\n\nTag-names to strip from the tree (`Array.<string>`).\n\nBy default, unsafe elements are replaced by their content.  Some elements,\nshould however be entirely stripped from the tree.\n\n```js\n\"strip\": [\n  \"script\"\n]\n```\n\n###### `allowComments`\n\nWhether to allow comment nodes (`boolean`, default: `false`).\n\n```js\n\"allowComments\": true\n```\n\n###### `allowDoctypes`\n\nWhether to allow doctype nodes (`boolean`, default: `false`).\n\n```js\n\"allowDoctypes\": true\n```\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/hast`][contributing] for ways to get\nstarted.\n\nThis organisation has a [Code of Conduct][coc].  By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/syntax-tree/hast-util-sanitize.svg\n\n[travis]: https://travis-ci.org/syntax-tree/hast-util-sanitize\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/syntax-tree/hast-util-sanitize.svg\n\n[codecov]: https://codecov.io/github/syntax-tree/hast-util-sanitize\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[hast]: https://github.com/syntax-tree/hast\n\n[schema]: #schema\n\n[github]: https://github.com/jch/html-pipeline/blob/master/lib/html/pipeline/sanitization_filter.rb\n\n[schema-github]: lib/github.json\n\n[contributing]: https://github.com/syntax-tree/hast/blob/master/contributing.md\n\n[coc]: https://github.com/syntax-tree/hast/blob/master/code-of-conduct.md\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "plugins": [
      "preset-wooorm"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/syntax-tree/hast-util-sanitize.git"
  },
  "scripts": {
    "build": "npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js --bare -s hastUtilSanitize > hast-util-sanitize.js",
    "build-mangle": "esmangle hast-util-sanitize.js > hast-util-sanitize.min.js",
    "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix",
    "test": "npm run format && npm run build && npm run test-coverage",
    "test-api": "node test",
    "test-coverage": "nyc --reporter lcov tape test.js"
  },
  "version": "1.2.0",
  "xo": {
    "prettier": true,
    "esnext": false,
    "rules": {
      "no-negated-condition": "off",
      "guard-for-in": "off"
    },
    "ignores": [
      "hast-util-sanitize.js"
    ]
  }
}
