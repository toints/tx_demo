{
  "_args": [
    [
      {
        "raw": "mdast-util-to-hast@^3.0.0",
        "scope": null,
        "escapedName": "mdast-util-to-hast",
        "name": "mdast-util-to-hast",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "/home/ubuntu/test/demo/node_modules/vnscoinjs-tx/node_modules/vnscoinjs-util/node_modules/remark-html"
    ]
  ],
  "_from": "mdast-util-to-hast@>=3.0.0 <4.0.0",
  "_id": "mdast-util-to-hast@3.0.1",
  "_inCache": true,
  "_location": "/mdast-util-to-hast",
  "_nodeVersion": "10.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/mdast-util-to-hast_3.0.1_1528101487678_0.1017602933017141"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "6.0.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mdast-util-to-hast@^3.0.0",
    "scope": null,
    "escapedName": "mdast-util-to-hast",
    "name": "mdast-util-to-hast",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/remark-html"
  ],
  "_resolved": "https://registry.npmjs.org/mdast-util-to-hast/-/mdast-util-to-hast-3.0.1.tgz",
  "_shasum": "0f91a2d3e3f9415705c0849ff8c2cbe5cc73b307",
  "_shrinkwrap": null,
  "_spec": "mdast-util-to-hast@^3.0.0",
  "_where": "/home/ubuntu/test/demo/node_modules/vnscoinjs-tx/node_modules/vnscoinjs-util/node_modules/remark-html",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/syntax-tree/mdast-util-to-hast/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    }
  ],
  "dependencies": {
    "collapse-white-space": "^1.0.0",
    "detab": "^2.0.0",
    "mdast-util-definitions": "^1.2.0",
    "mdurl": "^1.0.1",
    "trim": "0.0.1",
    "trim-lines": "^1.0.0",
    "unist-builder": "^1.0.1",
    "unist-util-generated": "^1.1.0",
    "unist-util-position": "^3.0.0",
    "unist-util-visit": "^1.1.0",
    "xtend": "^4.0.1"
  },
  "description": "Transform MDAST to HAST",
  "devDependencies": {
    "browserify": "^16.0.0",
    "esmangle": "^1.0.1",
    "nyc": "^12.0.0",
    "prettier": "^1.13.3",
    "remark-cli": "^5.0.0",
    "remark-preset-wooorm": "^4.0.0",
    "tape": "^4.0.0",
    "xo": "^0.21.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-+eimV/12kdg0/T0EEfcK7IsDbSu2auVm92z5jdSEQ3DHF2HiU4OHmX9ir5wpQajr73nwabdxrUoxREvW2zVFFw==",
    "shasum": "0f91a2d3e3f9415705c0849ff8c2cbe5cc73b307",
    "tarball": "https://registry.npmjs.org/mdast-util-to-hast/-/mdast-util-to-hast-3.0.1.tgz",
    "fileCount": 33,
    "unpackedSize": 24225,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbFPpwCRA9TVsSAnZWagAASK4P/0ugOamh/c5N7nl7D/G2\ngBpkqk0E3iDunTkFrm/4WMqwuzJXUuJsZexp4cbsdkQWkvLWa/gdS2uPXVP0\nDchcr0Z7Yf1MPCoz7mSIhl9m+3xscOa+C4FQi7l/E/y7fbeSpScd23LR2Z2t\nwXBAjPltqP/YpiZEZb4LLtigeD0Y2txFudVf8EJ1zXTmtKpKhr2npA6K4zCY\n5i8MFFSrsMO8d+RRAgYd0jez6lhta3FTFOYwy6OzEcVhgtY7D1yLR74+2OxF\nmy9/sP53WOrJhIOQy1zYQSuNvQuRrE9pFzE23kzlK2p50MeqePQey16O47/Q\nBV9oxTWNwsHyC1OutO73gCeP9VXvNs/8ynvi9vbLZDPaDcGUaUeRsmyJmcjG\nDOFpNwEotVOruxEDM7HKXjur+yTTnLC0YySAx6S0GLHSulLb5FhDsfIYsjng\nPB3t+5LWa8LeXKGzwBI0Tz+eUts+8+iNHlPsq4n1/uNebwW895aAoik6D+HG\n7thIe1Hq4X6bVDPGOjbqlW/IkgJGQUItoAXbVwU3o+MiH8D8WFA1A/VruZjc\nX962zYHdogvoUU0FRRUwMgPVAEIi+5Nsvb+/lECeswL3345hy41qH5yJ51vS\nG/b4QOuQq5rLSiNJsZ81Ss5N+9fWBlMYkDyvl7vYoxHtfQTzqb0e4nLjvdg9\nPOSI\r\n=ichD\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "lib",
    "index.js"
  ],
  "gitHead": "8bb6bd02c1c18632c5766f24ae213ec9218fd3b2",
  "homepage": "https://github.com/syntax-tree/mdast-util-to-hast#readme",
  "keywords": [
    "mdast",
    "util",
    "hast"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "mdast-util-to-hast",
  "optionalDependencies": {},
  "prettier": {
    "tabWidth": 2,
    "useTabs": false,
    "singleQuote": true,
    "bracketSpacing": false,
    "semi": false,
    "trailingComma": "none"
  },
  "readme": "# mdast-util-to-hast [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nTransform [MDAST][] to [HAST][].\n\n> **Note**: You probably want to use [remark-rehype][].\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install mdast-util-to-hast\n```\n\n## Usage\n\nSay we have the following `example.md`:\n\n```markdown\n## Hello **World**!\n```\n\n…and next to it, `example.js`:\n\n```javascript\nvar inspect = require('unist-util-inspect')\nvar unified = require('unified')\nvar parse = require('remark-parse')\nvar vfile = require('to-vfile')\nvar toHAST = require('mdast-util-to-hast')\n\nvar tree = unified()\n  .use(parse)\n  .parse(vfile.readSync('example.md'))\n\nconsole.log(inspect(toHAST(tree)))\n```\n\nWhich when running with `node example` yields:\n\n```txt\nroot[1] (1:1-2:1, 0-20)\n└─ element[3] (1:1-1:20, 0-19) [tagName=\"h2\"]\n   ├─ text: \"Hello \" (1:4-1:10, 3-9)\n   ├─ element[1] (1:10-1:19, 9-18) [tagName=\"strong\"]\n   │  └─ text: \"World\" (1:12-1:17, 11-16)\n   └─ text: \"!\" (1:19-1:20, 18-19)\n```\n\n## API\n\n### `toHAST(node[, options])`\n\nTransform the given [MDAST][] tree to a [HAST][] tree.\n\n##### Options\n\n###### `options.allowDangerousHTML`\n\nWhether to allow `html` nodes and inject them as raw HTML (`boolean`, default:\n`false`).  Only do this when compiling later with `hast-util-to-html`.\n\n###### `options.commonmark`\n\nSet to `true` (default: `false`) to prefer the first when duplicate definitions\nare found.  The default behaviour is to prefer the last duplicate definition.\n\n###### `options.handlers`\n\nObject mapping [MDAST nodes][mdast] to functions handling those elements.\nTake a look at [`lib/handlers/`][handlers] for examples.\n\n##### Returns\n\n[`HASTNode`][hast].\n\n##### Notes\n\n*   `yaml` and `toml` nodes are ignored\n*   [`html`][mdast-html] nodes are ignored if `allowDangerousHTML` is `false`\n*   [`position`][unist-position]s are properly patched\n*   Unknown nodes with `children` are transformed to `div` elements\n*   Unknown nodes with `value` are transformed to `text` nodes\n*   [`node.data.hName`][hname] configures the HAST element’s tag-name\n*   [`node.data.hProperties`][hproperties] is mixed into the HAST element’s\n    properties\n*   [`node.data.hChildren`][hchildren] configures the HAST element’s children\n\n##### Examples\n\n###### `hName`\n\n`node.data.hName` sets the tag-name of an element.\nThe following [MDAST][]:\n\n```js\n{\n  type: 'strong',\n  data: {hName: 'b'},\n  children: [{type: 'text', value: 'Alpha'}]\n}\n```\n\nYields, in [HAST][]:\n\n```js\n{\n  type: 'element',\n  tagName: 'b',\n  properties: {},\n  children: [{type: 'text', value: 'Alpha'}]\n}\n```\n\n###### `hProperties`\n\n`node.data.hProperties` in sets the properties of an element.\nThe following [MDAST][]:\n\n```js\n{\n  type: 'image',\n  src: 'circle.svg',\n  alt: 'Big red circle on a black background',\n  title: null\n  data: {hProperties: {className: ['responsive']}}\n}\n```\n\nYields, in [HAST][]:\n\n```js\n{\n  type: 'element',\n  tagName: 'img',\n  properties: {\n    src: 'circle.svg',\n    alt: 'Big red circle on a black background',\n    className: ['responsive']\n  },\n  children: []\n}\n```\n\n###### `hChildren`\n\n`node.data.hChildren` sets the children of an element.\nThe following [MDAST][]:\n\n```js\n{\n  type: 'code',\n  lang: 'js',\n  data: {\n    hChildren: [\n      {\n        type: 'element',\n        tagName: 'span',\n        properties: {className: ['hljs-meta']},\n        children: [{type: 'text', value: '\"use strict\"'}]\n      },\n      {type: 'text', value: ';'}\n    ]\n  },\n  value: '\"use strict\";'\n}\n```\n\nYields, in [HAST][] (**note**: the `pre` and `language-js` class are normal\n`mdast-util-to-hast` functionality):\n\n```js\n{\n  type: 'element',\n  tagName: 'pre',\n  properties: {},\n  children: [{\n    type: 'element',\n    tagName: 'code',\n    properties: {className: ['language-js']},\n    children: [\n      {\n        type: 'element',\n        tagName: 'span',\n        properties: {className: ['hljs-meta']},\n        children: [{type: 'text', value: '\"use strict\"'}]\n      },\n      {type: 'text', value: ';'}\n    ]\n  }]\n}\n```\n\n## Related\n\n*   [`mdast-util-to-nlcst`](https://github.com/syntax-tree/mdast-util-to-nlcst)\n    — Transform MDAST to NLCST\n*   [`hast-util-sanitize`](https://github.com/syntax-tree/hast-util-sanitize)\n    — Sanitize HAST nodes\n*   [`hast-util-to-mdast`](https://github.com/syntax-tree/hast-util-to-mdast)\n    — Transform HAST to MDAST\n*   [`remark-rehype`](https://github.com/remarkjs/remark-rehype)\n    — rehype support for remark\n*   [`rehype-remark`](https://github.com/rehypejs/rehype-remark)\n    — remark support for rehype\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/mdast`][contributing] for ways to get\nstarted.\n\nThis organisation has a [Code of Conduct][coc].  By interacting with this\nrepository, organisation, or community you agree to abide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/syntax-tree/mdast-util-to-hast.svg\n\n[travis]: https://travis-ci.org/syntax-tree/mdast-util-to-hast\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/syntax-tree/mdast-util-to-hast.svg\n\n[codecov]: https://codecov.io/github/syntax-tree/mdast-util-to-hast\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[hast]: https://github.com/syntax-tree/hast\n\n[mdast-html]: https://github.com/syntax-tree/mdast#html\n\n[unist-position]: https://github.com/syntax-tree/unist#location\n\n[handlers]: lib/handlers\n\n[remark-rehype]: https://github.com/remarkjs/remark-rehype\n\n[contributing]: https://github.com/syntax-tree/mdast/blob/master/contributing.md\n\n[coc]: https://github.com/syntax-tree/mdast/blob/master/code-of-conduct.md\n\n[hname]: #hname\n\n[hproperties]: #hproperties\n\n[hchildren]: #hchildren\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "plugins": [
      "preset-wooorm"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/syntax-tree/mdast-util-to-hast.git"
  },
  "scripts": {
    "build": "npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js --bare -s mdastUtilToHAST > mdast-util-to-hast.js",
    "build-mangle": "esmangle mdast-util-to-hast.js > mdast-util-to-hast.min.js",
    "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix",
    "test": "npm run format && npm run build && npm run test-coverage",
    "test-api": "node test",
    "test-coverage": "nyc --reporter lcov tape test/index.js"
  },
  "version": "3.0.1",
  "xo": {
    "prettier": true,
    "esnext": false,
    "rules": {
      "no-var": "off",
      "prefer-arrow-callback": "off",
      "guard-for-in": "off"
    },
    "ignores": [
      "mdast-util-to-hast.js"
    ]
  }
}
