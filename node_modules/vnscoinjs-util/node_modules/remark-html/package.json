{
  "_args": [
    [
      {
        "raw": "remark-html@7.0.0",
        "scope": null,
        "escapedName": "remark-html",
        "name": "remark-html",
        "rawSpec": "7.0.0",
        "spec": "7.0.0",
        "type": "version"
      },
      "/home/ubuntu/test/demo/node_modules/vnscoinjs-util/node_modules/documentation"
    ]
  ],
  "_from": "remark-html@7.0.0",
  "_id": "remark-html@7.0.0",
  "_inCache": true,
  "_location": "/remark-html",
  "_nodeVersion": "9.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/remark-html-7.0.0.tgz_1512418852186_0.7877658344805241"
  },
  "_npmUser": {
    "name": "wooorm",
    "email": "tituswormer@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "remark-html@7.0.0",
    "scope": null,
    "escapedName": "remark-html",
    "name": "remark-html",
    "rawSpec": "7.0.0",
    "spec": "7.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/documentation"
  ],
  "_resolved": "https://registry.npmjs.org/remark-html/-/remark-html-7.0.0.tgz",
  "_shasum": "d13dc1ba9352e257fce8800c42c7690d9e3690c8",
  "_shrinkwrap": null,
  "_spec": "remark-html@7.0.0",
  "_where": "/home/ubuntu/test/demo/node_modules/vnscoinjs-util/node_modules/documentation",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/wooorm/remark-html/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    },
    {
      "name": "Ben Briggs",
      "email": "beneb.info@gmail.com"
    },
    {
      "name": "Seth Vincent",
      "email": "sethvincent@gmail.com"
    },
    {
      "name": "Junyoung Choi",
      "email": "fluke8259@gmail.com"
    },
    {
      "name": "Jonathan Soeder",
      "email": "jonathan.soeder@gmail.com"
    }
  ],
  "dependencies": {
    "hast-util-sanitize": "^1.0.0",
    "hast-util-to-html": "^3.0.0",
    "mdast-util-to-hast": "^3.0.0",
    "xtend": "^4.0.1"
  },
  "description": "Compile Markdown to HTML with remark",
  "devDependencies": {
    "browserify": "^14.0.0",
    "commonmark.json": "^0.27.0",
    "esmangle": "^1.0.0",
    "is-hidden": "^1.0.1",
    "nyc": "^11.0.0",
    "remark": "^8.0.0",
    "remark-cli": "^4.0.0",
    "remark-github": "^7.0.0",
    "remark-preset-wooorm": "^3.0.0",
    "remark-toc": "^4.0.0",
    "tape": "^4.0.0",
    "to-vfile": "^2.0.0",
    "xo": "^0.18.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-jqRzkZXCkM12gIY2ibMLTW41m7rfanliMTVQCFTezHJFsbH00YaTox/BX4gU+f/zCdzfhFJONtebFByvpMv37w==",
    "shasum": "d13dc1ba9352e257fce8800c42c7690d9e3690c8",
    "tarball": "https://registry.npmjs.org/remark-html/-/remark-html-7.0.0.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "acdc1a772c16eac971b87d5c643eb2baa11b26f6",
  "homepage": "https://github.com/wooorm/remark-html#readme",
  "keywords": [
    "markdown",
    "html",
    "stringify",
    "compile",
    "remark"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "wooorm",
      "email": "tituswormer@gmail.com"
    }
  ],
  "name": "remark-html",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "readme": "# remark-html [![Build Status][build-badge]][build-status] [![Coverage Status][coverage-badge]][coverage-status] [![Chat][chat-badge]][chat]\n\nCompile markdown to HTML with [**remark**][remark].\n\n> :warning: This package essentially packs [`remark-rehype`][remark2rehype] and\n> [`rehype-stringify`][rehype-stringify], and although it does support some\n> customisation, it isn’t very pluggable.  It’s probably smarter to use\n> `remark-rehype` directly and benefit from the [**rehype**][rehype]\n> ecosystem.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install remark-html\n```\n\n## Usage\n\nSay we have the following file, `example.md`:\n\n```markdown\n# Hello & World\n\n> A block quote.\n\n* Some _emphasis_, **importance**, and `code`.\n```\n\nAnd our script, `example.js`, looks as follows:\n\n```javascript\nvar fs = require('fs');\nvar unified = require('unified');\nvar markdown = require('remark-parse');\nvar html = require('remark-html');\n\nunified()\n  .use(markdown)\n  .use(html)\n  .process(fs.readFileSync('example.md'), function (err, file) {\n    if (err) throw err;\n    console.log(String(file));\n  });\n```\n\nNow, running `node example` yields:\n\n```html\n<h1>Hello &#x26; World</h1>\n<blockquote>\n<p>A block quote.</p>\n</blockquote>\n<ul>\n<li>Some <em>emphasis</em>, <strong>importance</strong>, and <code>code</code>.</li>\n</ul>\n```\n\n## API\n\n### `remark.use(html[, options])`\n\n##### `options`\n\nAll options except for `sanitize` are passed to\n[`hast-util-to-html`][to-html].\n\n###### `options.sanitize`\n\nHow to sanitise the output (`Object` or `boolean`, default: `false`).\n\nIf `true` or an `object`, sanitation is done by\n[`hast-util-sanitize`][sanitize].  If an object is passed in, it’s\ngiven as a schema to `sanitize`.  If `true`, input is sanitised\naccording to [GitHub’s sanitation rules][github].\n\nFor example, to add strict sanitation but allowing `className`s, use\nsomething like:\n\n```js\n// ...\nvar merge = require('deepmerge');\nvar github = require('hast-util-sanitize/lib/github');\n\nvar schema = merge(github, {attributes: {'*': ['className']}});\n\nremark().use(html, {sanitize: schema}).processSync(/*...*/);\n```\n\n## CommonMark\n\n> You still need to set `commonmark: true` in\n> [`remark-parse`s options][remark-options].\n\n[CommonMark][] support is a goal but not (yet) a necessity.  There are\nsome (roughly 115 of 550, relating to inline precedence, lists, emphasis\nand importance) issues which I’d like to cover in the future.  Note that\nthis sounds like a lot, but they have to do with obscure differences\nwhich do not often occur in the real world.\n\n## Integrations\n\n`remark-html` works great with:\n\n*   [`remark-autolink-headings`](https://github.com/ben-eb/remark-autolink-headings)\n    — Automatically add links to headings in Markdown\n*   [`remark-github`](https://github.com/wooorm/remark-github)\n    — Generate references to GitHub issues, PRs, users, and more\n*   [`remark-highlight.js`](https://github.com/ben-eb/remark-highlight.js)\n    — Highlight code blocks\n*   [`remark-html-emoji-image`](https://github.com/jackycute/remark-html-emoji-image)\n    — Transform emoji unicodes into html images\n*   [`remark-html-katex`](https://github.com/rokt33r/remark-math/blob/master/packages/remark-html-katex/readme.md)\n    — Transform math to HTML with KaTeX\n*   [`remark-math`](https://github.com/rokt33r/remark-math)\n    — Math support for markdown (inline and block)\n*   [`remark-midas`](https://github.com/ben-eb/remark-midas)\n    — Highlight CSS code with [midas](https://github.com/ben-eb/midas)\n*   [`remark-toc`](https://github.com/wooorm/remark-toc)\n    — Generate a Tables of Contents\n*   ...and [more][remark-plugins]\n\nAll [**MDAST** nodes][mdast] can be compiled to HTML.  Unknown **MDAST**\nnodes are compiled to `div` nodes if they have `children` or `text` nodes\nif they have `value`.\n\nIn addition, **remark-html** can be told how to compile nodes through\nthree `data` properties ([more information][to-hast]):\n\n*   `hName` — Tag-name to compile as\n*   `hChildren` — HTML content to add (instead of `children` and `value`),\n    in [`HAST`][hast]\n*   `hProperties` — Map of attributes to add\n\nFor example, the following node:\n\n```js\n{\n  type: 'emphasis',\n  data: {\n    hName: 'i',\n    hProperties: {\n      className: 'foo'\n    },\n    hChildren: [{\n      type: 'text',\n      value: 'bar'\n    }]\n  },\n  children: [{\n    type: 'text',\n    value: 'baz',\n  }]\n}\n```\n\n...would yield:\n\n```markdown\n<i class=\"foo\">bar</i>\n```\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/remark-html.svg\n\n[build-status]: https://travis-ci.org/wooorm/remark-html\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/remark-html.svg\n\n[coverage-status]: https://codecov.io/github/wooorm/remark-html\n\n[chat-badge]: https://img.shields.io/gitter/room/wooorm/remark.svg\n\n[chat]: https://gitter.im/wooorm/remark\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[remark]: https://github.com/wooorm/remark\n\n[remark-options]: https://github.com/wooorm/remark/tree/master/packages/remark-parse#options\n\n[commonmark]: http://commonmark.org\n\n[remark-plugins]: https://github.com/wooorm/remark/blob/master/doc/plugins.md#list-of-plugins\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[to-html]: https://github.com/syntax-tree/hast-util-to-html\n\n[sanitize]: https://github.com/syntax-tree/hast-util-sanitize\n\n[github]: https://github.com/syntax-tree/hast-util-sanitize#schema\n\n[to-hast]: https://github.com/syntax-tree/mdast-util-to-hast#note\n\n[remark2rehype]: https://github.com/wooorm/remark-rehype\n\n[rehype-stringify]: https://github.com/wooorm/rehype/tree/master/packages/rehype-stringify\n\n[rehype]: https://github.com/wooorm/rehype\n\n[hast]: https://github.com/syntax-tree/hast\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "plugins": [
      "preset-wooorm"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wooorm/remark-html.git"
  },
  "scripts": {
    "build": "npm run build-md && npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js --bare -s remarkHTML > remark-html.js",
    "build-mangle": "esmangle remark-html.js > remark-html.min.js",
    "build-md": "remark *.md doc/*.md -qfo",
    "lint": "xo",
    "test": "npm run build && npm run lint && npm run test-coverage",
    "test-api": "node test/index.js",
    "test-coverage": "nyc --reporter lcov tape test/index.js"
  },
  "version": "7.0.0",
  "xo": {
    "space": true,
    "esnext": false,
    "ignores": [
      "remark-html.js"
    ]
  }
}
